datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Neon connection string
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Profile   Profile?
}

model Profile {
  userId      String   @id
  displayName String?
  createdAt   DateTime @default(now())
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Save        Save?
  Workouts    Workout[]
}

model Save {
  userId               String  @id
  level                Int     @default(1)
  xp                   Int     @default(0)
  energy               Int     @default(100)
  lastEnergyResetDate  DateTime?
  strength             Int     @default(1)
  stamina              Int     @default(1)
  agility              Int     @default(1)
  injury               Int     @default(0)
  spriteStage          Int     @default(0)
  updatedAt            DateTime @updatedAt
  Profile              Profile  @relation(fields: [userId], references: [userId])
}

model Workout {
  id           BigInt   @id @default(autoincrement())
  userId       String
  type         String
  reps         Int
  difficulty   Int      @default(1)
  energySpent  Int
  xpGained     Int
  statGains    Json
  performedAt  DateTime @default(now())
  Profile      Profile  @relation(fields: [userId], references: [userId])

  @@index([userId, performedAt])
}
